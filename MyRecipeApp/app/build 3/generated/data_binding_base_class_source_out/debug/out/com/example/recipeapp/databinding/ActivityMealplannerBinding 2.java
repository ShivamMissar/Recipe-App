// Generated by view binder compiler. Do not edit!
package com.example.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMealplannerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button CreateEvent;

  @NonNull
  public final Spinner RecipeNames;

  @NonNull
  public final ConstraintLayout calander;

  @NonNull
  public final EditText location;

  @NonNull
  public final EditText notes;

  @NonNull
  public final TextView textView2;

  private ActivityMealplannerBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button CreateEvent, @NonNull Spinner RecipeNames, @NonNull ConstraintLayout calander,
      @NonNull EditText location, @NonNull EditText notes, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.CreateEvent = CreateEvent;
    this.RecipeNames = RecipeNames;
    this.calander = calander;
    this.location = location;
    this.notes = notes;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMealplannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMealplannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mealplanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMealplannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CreateEvent;
      Button CreateEvent = ViewBindings.findChildViewById(rootView, id);
      if (CreateEvent == null) {
        break missingId;
      }

      id = R.id.RecipeNames;
      Spinner RecipeNames = ViewBindings.findChildViewById(rootView, id);
      if (RecipeNames == null) {
        break missingId;
      }

      ConstraintLayout calander = (ConstraintLayout) rootView;

      id = R.id.location;
      EditText location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.notes;
      EditText notes = ViewBindings.findChildViewById(rootView, id);
      if (notes == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityMealplannerBinding((ConstraintLayout) rootView, CreateEvent, RecipeNames,
          calander, location, notes, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
