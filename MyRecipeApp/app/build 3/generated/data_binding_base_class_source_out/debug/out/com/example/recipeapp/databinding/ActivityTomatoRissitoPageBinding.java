// Generated by view binder compiler. Do not edit!
package com.example.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTomatoRissitoPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox FavouritesCheck;

  @NonNull
  public final TextView RequiredList;

  @NonNull
  public final TextView TRstep1;

  @NonNull
  public final TextView TRstep2;

  @NonNull
  public final TextView difficultyLevel13;

  @NonNull
  public final Button gotTheRequiredItems;

  @NonNull
  public final ImageView imageView6;

  @NonNull
  public final TextView requiredItem1;

  @NonNull
  public final TextView requiredItem2;

  @NonNull
  public final TextView requiredItem3;

  @NonNull
  public final TextView requiredItem6;

  @NonNull
  public final TextView requiredItem7;

  @NonNull
  public final TextView requiredItem8;

  @NonNull
  public final TextView requiredItem9;

  @NonNull
  public final TextView requireditem4;

  @NonNull
  public final TextView requireditem5;

  @NonNull
  public final TextView setup;

  @NonNull
  public final TextView tomatoRisottoDesc;

  @NonNull
  public final TextView tomatoRisottoTitle;

  @NonNull
  public final TextView totaltime13;

  private ActivityTomatoRissitoPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull CheckBox FavouritesCheck, @NonNull TextView RequiredList, @NonNull TextView TRstep1,
      @NonNull TextView TRstep2, @NonNull TextView difficultyLevel13,
      @NonNull Button gotTheRequiredItems, @NonNull ImageView imageView6,
      @NonNull TextView requiredItem1, @NonNull TextView requiredItem2,
      @NonNull TextView requiredItem3, @NonNull TextView requiredItem6,
      @NonNull TextView requiredItem7, @NonNull TextView requiredItem8,
      @NonNull TextView requiredItem9, @NonNull TextView requireditem4,
      @NonNull TextView requireditem5, @NonNull TextView setup, @NonNull TextView tomatoRisottoDesc,
      @NonNull TextView tomatoRisottoTitle, @NonNull TextView totaltime13) {
    this.rootView = rootView;
    this.FavouritesCheck = FavouritesCheck;
    this.RequiredList = RequiredList;
    this.TRstep1 = TRstep1;
    this.TRstep2 = TRstep2;
    this.difficultyLevel13 = difficultyLevel13;
    this.gotTheRequiredItems = gotTheRequiredItems;
    this.imageView6 = imageView6;
    this.requiredItem1 = requiredItem1;
    this.requiredItem2 = requiredItem2;
    this.requiredItem3 = requiredItem3;
    this.requiredItem6 = requiredItem6;
    this.requiredItem7 = requiredItem7;
    this.requiredItem8 = requiredItem8;
    this.requiredItem9 = requiredItem9;
    this.requireditem4 = requireditem4;
    this.requireditem5 = requireditem5;
    this.setup = setup;
    this.tomatoRisottoDesc = tomatoRisottoDesc;
    this.tomatoRisottoTitle = tomatoRisottoTitle;
    this.totaltime13 = totaltime13;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTomatoRissitoPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTomatoRissitoPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tomato_rissito_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTomatoRissitoPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FavouritesCheck;
      CheckBox FavouritesCheck = ViewBindings.findChildViewById(rootView, id);
      if (FavouritesCheck == null) {
        break missingId;
      }

      id = R.id.RequiredList;
      TextView RequiredList = ViewBindings.findChildViewById(rootView, id);
      if (RequiredList == null) {
        break missingId;
      }

      id = R.id.TRstep_1;
      TextView TRstep1 = ViewBindings.findChildViewById(rootView, id);
      if (TRstep1 == null) {
        break missingId;
      }

      id = R.id.TRstep_2;
      TextView TRstep2 = ViewBindings.findChildViewById(rootView, id);
      if (TRstep2 == null) {
        break missingId;
      }

      id = R.id.difficultyLevel13;
      TextView difficultyLevel13 = ViewBindings.findChildViewById(rootView, id);
      if (difficultyLevel13 == null) {
        break missingId;
      }

      id = R.id.gotTheRequiredItems;
      Button gotTheRequiredItems = ViewBindings.findChildViewById(rootView, id);
      if (gotTheRequiredItems == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.requiredItem1;
      TextView requiredItem1 = ViewBindings.findChildViewById(rootView, id);
      if (requiredItem1 == null) {
        break missingId;
      }

      id = R.id.requiredItem2;
      TextView requiredItem2 = ViewBindings.findChildViewById(rootView, id);
      if (requiredItem2 == null) {
        break missingId;
      }

      id = R.id.requiredItem3;
      TextView requiredItem3 = ViewBindings.findChildViewById(rootView, id);
      if (requiredItem3 == null) {
        break missingId;
      }

      id = R.id.requiredItem6;
      TextView requiredItem6 = ViewBindings.findChildViewById(rootView, id);
      if (requiredItem6 == null) {
        break missingId;
      }

      id = R.id.requiredItem7;
      TextView requiredItem7 = ViewBindings.findChildViewById(rootView, id);
      if (requiredItem7 == null) {
        break missingId;
      }

      id = R.id.requiredItem8;
      TextView requiredItem8 = ViewBindings.findChildViewById(rootView, id);
      if (requiredItem8 == null) {
        break missingId;
      }

      id = R.id.requiredItem9;
      TextView requiredItem9 = ViewBindings.findChildViewById(rootView, id);
      if (requiredItem9 == null) {
        break missingId;
      }

      id = R.id.requireditem4;
      TextView requireditem4 = ViewBindings.findChildViewById(rootView, id);
      if (requireditem4 == null) {
        break missingId;
      }

      id = R.id.requireditem5;
      TextView requireditem5 = ViewBindings.findChildViewById(rootView, id);
      if (requireditem5 == null) {
        break missingId;
      }

      id = R.id.setup;
      TextView setup = ViewBindings.findChildViewById(rootView, id);
      if (setup == null) {
        break missingId;
      }

      id = R.id.tomato_risottoDesc;
      TextView tomatoRisottoDesc = ViewBindings.findChildViewById(rootView, id);
      if (tomatoRisottoDesc == null) {
        break missingId;
      }

      id = R.id.tomatoRisottoTitle;
      TextView tomatoRisottoTitle = ViewBindings.findChildViewById(rootView, id);
      if (tomatoRisottoTitle == null) {
        break missingId;
      }

      id = R.id.totaltime13;
      TextView totaltime13 = ViewBindings.findChildViewById(rootView, id);
      if (totaltime13 == null) {
        break missingId;
      }

      return new ActivityTomatoRissitoPageBinding((ConstraintLayout) rootView, FavouritesCheck,
          RequiredList, TRstep1, TRstep2, difficultyLevel13, gotTheRequiredItems, imageView6,
          requiredItem1, requiredItem2, requiredItem3, requiredItem6, requiredItem7, requiredItem8,
          requiredItem9, requireditem4, requireditem5, setup, tomatoRisottoDesc, tomatoRisottoTitle,
          totaltime13);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
