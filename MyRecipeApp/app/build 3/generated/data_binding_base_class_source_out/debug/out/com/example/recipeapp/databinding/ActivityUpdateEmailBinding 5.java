// Generated by view binder compiler. Do not edit!
package com.example.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateEmailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView forgotPasswordFromEmail;

  @NonNull
  public final EditText newEmail;

  @NonNull
  public final Button reAuthButton;

  @NonNull
  public final EditText reAuthEmail;

  @NonNull
  public final EditText reAuthPassword;

  @NonNull
  public final TextView updateEmail;

  @NonNull
  public final Button updateEmailButton;

  private ActivityUpdateEmailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView forgotPasswordFromEmail, @NonNull EditText newEmail,
      @NonNull Button reAuthButton, @NonNull EditText reAuthEmail, @NonNull EditText reAuthPassword,
      @NonNull TextView updateEmail, @NonNull Button updateEmailButton) {
    this.rootView = rootView;
    this.forgotPasswordFromEmail = forgotPasswordFromEmail;
    this.newEmail = newEmail;
    this.reAuthButton = reAuthButton;
    this.reAuthEmail = reAuthEmail;
    this.reAuthPassword = reAuthPassword;
    this.updateEmail = updateEmail;
    this.updateEmailButton = updateEmailButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateEmailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateEmailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_email, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateEmailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.forgotPasswordFromEmail;
      TextView forgotPasswordFromEmail = ViewBindings.findChildViewById(rootView, id);
      if (forgotPasswordFromEmail == null) {
        break missingId;
      }

      id = R.id.newEmail;
      EditText newEmail = ViewBindings.findChildViewById(rootView, id);
      if (newEmail == null) {
        break missingId;
      }

      id = R.id.reAuthButton;
      Button reAuthButton = ViewBindings.findChildViewById(rootView, id);
      if (reAuthButton == null) {
        break missingId;
      }

      id = R.id.reAuthEmail;
      EditText reAuthEmail = ViewBindings.findChildViewById(rootView, id);
      if (reAuthEmail == null) {
        break missingId;
      }

      id = R.id.reAuthPassword;
      EditText reAuthPassword = ViewBindings.findChildViewById(rootView, id);
      if (reAuthPassword == null) {
        break missingId;
      }

      id = R.id.updateEmail;
      TextView updateEmail = ViewBindings.findChildViewById(rootView, id);
      if (updateEmail == null) {
        break missingId;
      }

      id = R.id.updateEmailButton;
      Button updateEmailButton = ViewBindings.findChildViewById(rootView, id);
      if (updateEmailButton == null) {
        break missingId;
      }

      return new ActivityUpdateEmailBinding((ConstraintLayout) rootView, forgotPasswordFromEmail,
          newEmail, reAuthButton, reAuthEmail, reAuthPassword, updateEmail, updateEmailButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
